app listening in port 4200
[
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'CLIENTS' AND TABLE_SCHEMA = 'IAB2BUSINESS'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: false,
    paranoid: false,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: {},
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'Clients', singular: 'Client' },
    omitNull: false,
    tableName: 'CLIENTS',
    createdAt: false,
    updatedAt: false,
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: '127.0.0.1',
    protocol: 'tcp',
    define: {},
    query: {},
    sync: {},
    timezone: '+00:00',
    standardConformingStrings: true,
    native: false,
    replication: false,
    ssl: undefined,
    pool: {},
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: 0,
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: true,
    attributeBehavior: 'throw',
    port: 3306,
    dialectOptions: { flags: [Object] },
    match: /IAB2BUSINESS/,
    type: 'SHOWTABLES'
  }
]
[
  'Executing (default): CREATE TABLE IF NOT EXISTS `CLIENTS` (`CLTID` INTEGER auto_increment , `CLTNAME` VARCHAR(50), `CLTEMAIL` VARCHAR(50), `CLTPASSWORD` TEXT, `CLTCNPJ` VARCHAR(15), `CLTBUSINESSNAME` VARCHAR(20), `CLTFANTASYNAME` VARCHAR(30), `CLTSOCIALREASON` VARCHAR(20), `CLTCREATEDATE` VARCHAR(255), `CLTUPDATEDATE` VARCHAR(255), PRIMARY KEY (`CLTID`)) ENGINE=InnoDB;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: false,
    paranoid: false,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: {},
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'Clients', singular: 'Client' },
    omitNull: false,
    tableName: 'CLIENTS',
    createdAt: false,
    updatedAt: false,
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: '127.0.0.1',
    protocol: 'tcp',
    define: {},
    query: {},
    sync: {},
    timezone: '+00:00',
    standardConformingStrings: true,
    native: false,
    replication: false,
    ssl: undefined,
    pool: {},
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: 0,
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: true,
    attributeBehavior: 'throw',
    port: 3306,
    dialectOptions: { flags: [Object] },
    match: /IAB2BUSINESS/,
    uniqueKeys: {},
    type: 'RAW'
  }
]
[
  'Executing (default): SHOW INDEX FROM `CLIENTS`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: false,
    paranoid: false,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: {},
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'Clients', singular: 'Client' },
    omitNull: false,
    tableName: 'CLIENTS',
    createdAt: false,
    updatedAt: false,
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: '127.0.0.1',
    protocol: 'tcp',
    define: {},
    query: {},
    sync: {},
    timezone: '+00:00',
    standardConformingStrings: true,
    native: false,
    replication: false,
    ssl: undefined,
    pool: {},
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: 0,
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: true,
    attributeBehavior: 'throw',
    port: 3306,
    dialectOptions: { flags: [Object] },
    match: /IAB2BUSINESS/,
    type: 'SHOWINDEXES'
  }
]
[
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'PROVIDERS' AND TABLE_SCHEMA = 'IAB2BUSINESS'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: false,
    paranoid: false,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: {},
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'Providers', singular: 'Provider' },
    omitNull: false,
    tableName: 'PROVIDERS',
    createdAt: false,
    updatedAt: false,
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: '127.0.0.1',
    protocol: 'tcp',
    define: {},
    query: {},
    sync: {},
    timezone: '+00:00',
    standardConformingStrings: true,
    native: false,
    replication: false,
    ssl: undefined,
    pool: {},
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: 0,
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: true,
    attributeBehavior: 'throw',
    port: 3306,
    dialectOptions: { flags: [Object] },
    match: /IAB2BUSINESS/,
    type: 'SHOWTABLES'
  }
]
[
  'Executing (default): CREATE TABLE IF NOT EXISTS `PROVIDERS` (`PROVIDERID` INTEGER auto_increment , `PRVNAME` VARCHAR(50), `PRVEMAIL` VARCHAR(50), `PRVPASSWORD` TEXT, `PRVCNPJ` VARCHAR(15), `PRVBUSINESSNAME` VARCHAR(20), `PRVFANTASYNAME` VARCHAR(30), `PRVSOCIALREASON` VARCHAR(20), `PRVSECTORACTING` VARCHAR(100), `PRVCREATEDATE` VARCHAR(100), `PRVUPDATEDATE` VARCHAR(100), PRIMARY KEY (`PROVIDERID`)) ENGINE=InnoDB;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: false,
    paranoid: false,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: {},
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'Providers', singular: 'Provider' },
    omitNull: false,
    tableName: 'PROVIDERS',
    createdAt: false,
    updatedAt: false,
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: '127.0.0.1',
    protocol: 'tcp',
    define: {},
    query: {},
    sync: {},
    timezone: '+00:00',
    standardConformingStrings: true,
    native: false,
    replication: false,
    ssl: undefined,
    pool: {},
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: 0,
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: true,
    attributeBehavior: 'throw',
    port: 3306,
    dialectOptions: { flags: [Object] },
    match: /IAB2BUSINESS/,
    uniqueKeys: {},
    type: 'RAW'
  }
]
[
  'Executing (default): SHOW INDEX FROM `PROVIDERS`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: false,
    paranoid: false,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: {},
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'Providers', singular: 'Provider' },
    omitNull: false,
    tableName: 'PROVIDERS',
    createdAt: false,
    updatedAt: false,
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: '127.0.0.1',
    protocol: 'tcp',
    define: {},
    query: {},
    sync: {},
    timezone: '+00:00',
    standardConformingStrings: true,
    native: false,
    replication: false,
    ssl: undefined,
    pool: {},
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: 0,
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: true,
    attributeBehavior: 'throw',
    port: 3306,
    dialectOptions: { flags: [Object] },
    match: /IAB2BUSINESS/,
    type: 'SHOWINDEXES'
  }
]
connect successfully!
